/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import bd.ConsultasSQL;
import bd.ConsultasSQLPerrucaria;
import clases.Can;
import clases.Operacion;
import clases.Propietario;
import clases.CitaPerrucaria;
import clases.ListadoPerrucaria;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utilidades.Datas;

/**
 *
 * @author usuario
 */
public class IFrmNovaCitaPerrucaria extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrmNovaCitaPerrucaria
     */
    public IFrmNovaCitaPerrucaria() {
        initComponents();
        modeloPropietarios = new DefaultComboBoxModel<Propietario>();
        cmbPropietario.setModel(modeloPropietarios);
        desplegableBuscador1.setModel(modeloPropietarios2);
        modeloCans = new DefaultComboBoxModel<Can>();
        cmbCan.setModel(modeloCans);
        cargarPropietarios();
        btnAmosarCitas.setVisible(false);
    }

    private void habilitarCitaPerrucaria() {
        if (cmbCan.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Debe indicar o can para o que desexa reservar unha cita para a perrucaría", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        btnNovaData.setVisible(false);
        btnAmosarCitas.setVisible(true);
        txtData.setEnabled(true);
    }

    private void habilitarHorasCitaPerrucaria() {
        if (cmbCan.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Debe indicar o can para o que desexa reservar unha cita para a perrucaría", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        rbt10.setEnabled(true);
        rbt11.setEnabled(true);
        rbt12.setEnabled(true);
        rbt16.setEnabled(true);
        rbt17.setEnabled(true);
    }

    private void colorRbtsVerde() {
        rbt10.setForeground(Color.decode("#006400"));
        rbt11.setForeground(Color.decode("#006400"));
        rbt12.setForeground(Color.decode("#006400"));
        rbt16.setForeground(Color.decode("#006400"));
        rbt17.setForeground(Color.decode("#006400"));
    }
    
    private void deshabilitarCitaPerrucaria() {
        btnAmosarCitas.setVisible(false);
        btnNovaData.setVisible(true);
        txtData.setEnabled(false);
        txtData.setText("");
        rbt10.setEnabled(false);
        rbt11.setEnabled(false);
        rbt12.setEnabled(false);
        rbt16.setEnabled(false);
        rbt17.setEnabled(false);
        rbt10.setForeground(Color.black);
        rbt11.setForeground(Color.black);
        rbt12.setForeground(Color.black);
        rbt16.setForeground(Color.black);
        rbt17.setForeground(Color.black);
        rbt10.setSelected(false);
        rbt11.setSelected(false);
        rbt12.setSelected(false);
        rbt16.setSelected(false);
        rbt17.setSelected(false);
    }

    private void cargarCans(String dni) {
        modeloCans.removeAllElements();
        Vector cans = ConsultasSQL.recuperarTodolosCansDunPropietario(dni);
        if (cans == null) {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar os cans do propietario. Erro -11. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            for (int i = 0; i < cans.size(); i++) {
                modeloCans.addElement((Can) cans.elementAt(i));
            }
        }
    }

    private void cargarPropietarios() {
        modeloPropietarios.removeAllElements();
        Vector propietarios = ConsultasSQL.recuperarTodolosPropietarios();
        if (propietarios == null) {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar os propietarios. Erro -10. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            for (int i = 0; i < propietarios.size(); i++) {
                modeloPropietarios.addElement((Propietario) propietarios.elementAt(i));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btngrpHoras = new javax.swing.ButtonGroup();
        lblPropietario = new javax.swing.JLabel();
        cmbPropietario = new javax.swing.JComboBox();
        lblCan = new javax.swing.JLabel();
        cmbCan = new javax.swing.JComboBox();
        pnlCita = new javax.swing.JPanel();
        lblData = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        btnNovaData = new javax.swing.JButton();
        btnAmosarCitas = new javax.swing.JButton();
        rbt10 = new javax.swing.JRadioButton();
        rbt11 = new javax.swing.JRadioButton();
        rbt12 = new javax.swing.JRadioButton();
        rbt16 = new javax.swing.JRadioButton();
        rbt17 = new javax.swing.JRadioButton();
        pnlBotons = new javax.swing.JPanel();
        btnReservar = new javax.swing.JButton();
        btnPechar = new javax.swing.JButton();
        desplegableBuscador1 = new org.yourorg.desplegablebuscador.DesplegableBuscador();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Nova cita perrucaría");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblPropietario.setText("Propietario");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblPropietario, gridBagConstraints);

        cmbPropietario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPropietarioItemStateChanged(evt);
            }
        });
        cmbPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPropietarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cmbPropietario, gridBagConstraints);

        lblCan.setText("Can");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lblCan, gridBagConstraints);

        cmbCan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCanItemStateChanged(evt);
            }
        });
        cmbCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cmbCan, gridBagConstraints);

        pnlCita.setBorder(javax.swing.BorderFactory.createTitledBorder("Cita"));
        pnlCita.setLayout(new java.awt.GridBagLayout());

        lblData.setText("Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(lblData, gridBagConstraints);

        txtData.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(txtData, gridBagConstraints);

        btnNovaData.setText("Nova data");
        btnNovaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaDataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(btnNovaData, gridBagConstraints);

        btnAmosarCitas.setText("Amosar citas");
        btnAmosarCitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAmosarCitasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(btnAmosarCitas, gridBagConstraints);

        btngrpHoras.add(rbt10);
        rbt10.setText("10.00h");
        rbt10.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(rbt10, gridBagConstraints);

        btngrpHoras.add(rbt11);
        rbt11.setText("11.00h");
        rbt11.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(rbt11, gridBagConstraints);

        btngrpHoras.add(rbt12);
        rbt12.setText("12.00h");
        rbt12.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(rbt12, gridBagConstraints);

        btngrpHoras.add(rbt16);
        rbt16.setText("16.00h");
        rbt16.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(rbt16, gridBagConstraints);

        btngrpHoras.add(rbt17);
        rbt17.setText("17.00h");
        rbt17.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlCita.add(rbt17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(pnlCita, gridBagConstraints);

        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });
        pnlBotons.add(btnReservar);

        btnPechar.setText("Pechar");
        btnPechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecharActionPerformed(evt);
            }
        });
        pnlBotons.add(btnPechar);

        desplegableBuscador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desplegableBuscador1ActionPerformed(evt);
            }
        });
        pnlBotons.add(desplegableBuscador1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(pnlBotons, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPropietarioActionPerformed
        // TODO add your handling code here:
        deshabilitarCitaPerrucaria();
    }//GEN-LAST:event_cmbPropietarioActionPerformed

    private void cmbCanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCanItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String chip = modeloCans.getElementAt(cmbCan.getSelectedIndex()).getChip();
            //lblChip.setText("CHIP " + chip);
        }
    }//GEN-LAST:event_cmbCanItemStateChanged

    private void cmbPropietarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPropietarioItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String dniPropietario = modeloPropietarios.getElementAt(cmbPropietario.getSelectedIndex()).getDni();
            cargarCans(dniPropietario);
        }
    }//GEN-LAST:event_cmbPropietarioItemStateChanged

    private void btnPecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecharActionPerformed
        // TODO add your handling code here:
        XestorDeXanelas.pecharIFrmNovaCitaPerrucaria();
        dispose();
    }//GEN-LAST:event_btnPecharActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        // TODO add your handling code here:
        if (cmbCan.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Debe indicar o can para o que desexa reservar unha cita para a perrucaría", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }

        //String descripcionOperacion = txtarDescripcion.getText().trim();
        //if (descripcionOperacion.compareTo("") == 0) {
        //    JOptionPane.showMessageDialog(this, "Debe indicar a descripción da operación", "Atención", JOptionPane.WARNING_MESSAGE);
        //    return;
        //}
        String data = txtData.getText().trim();
        if (data.compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Debe indicar a data da cita para a perrucaría", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!Datas.isData_Dia_BARRA_Mes_BARRA_Anho_Valida(data)) {
            JOptionPane.showMessageDialog(this, "Data da cita non válida (dd/mm/aaaa)", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }

        data = Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(data);
        int numeroOperacionsGardadas = ConsultasSQL.recuperarNumeroDeOperacionsDunhaData(data);
        if (numeroOperacionsGardadas == -1) {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar o numero de operacións nunha data. Error -209. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            if (numeroOperacionsGardadas > 0) {
                JOptionPane.showMessageDialog(this, "Data inválida. Xa hai unha cita programada para a data indicada", "Atención", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        int hora = 0;

        if (rbt10.isSelected()) { hora = 10; }
        if (rbt11.isSelected()) { hora = 11; }
        if (rbt12.isSelected()) { hora = 12; }
        if (rbt16.isSelected()) { hora = 16; }
        if (rbt17.isSelected()) { hora = 17; }
        
        if (hora == 0) {
            JOptionPane.showMessageDialog(this, "Tes que seleccionar unha hora para a cita", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }

        List<CitaPerrucaria> citasData = obtenerHoras();
        
        // Comprobamos que la hora no esté en la BBDD para la fecha seleccionada
        if (citasData != null) {
            for (CitaPerrucaria horasCitaPerrucaria : citasData) {
                if (horasCitaPerrucaria.getHora() == hora) { JOptionPane.showMessageDialog(this, "Non hai disponibilidade na hora seleccionada.", "Atención", JOptionPane.WARNING_MESSAGE); return; }
            }
        }
        
        CitaPerrucaria citaPerrucaria = new CitaPerrucaria(modeloCans.getElementAt(cmbCan.getSelectedIndex()).getChip(), data, hora);

        if (ConsultasSQLPerrucaria.inserirCitaPerrucaria(citaPerrucaria) == -1) {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao insertar a cita da perrucaría. Error -201. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            JOptionPane.showMessageDialog(this, "Cita da perrucaría gardada", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }
        XestorDeXanelas.pecharIFrmNovaCitaPerrucaria();
        dispose();        
    }//GEN-LAST:event_btnReservarActionPerformed

    private void btnNovaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaDataActionPerformed
        // TODO add your handling code here:
        habilitarCitaPerrucaria();
    }//GEN-LAST:event_btnNovaDataActionPerformed

    private void cmbCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCanActionPerformed
        // TODO add your handling code here:
        deshabilitarCitaPerrucaria();
    }//GEN-LAST:event_cmbCanActionPerformed

    private List<CitaPerrucaria> obtenerHoras() {
        String data = txtData.getText();
        
        SimpleDateFormat formatoEntrada = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat formatoSalida = new SimpleDateFormat("yyyy-MM-dd");
        
        String fechaConvertida = "";
        
        try {
            Date fecha = formatoEntrada.parse(data);
            fechaConvertida = formatoSalida.format(fecha);
        } catch (ParseException e) {
            System.out.println("Error al parsear la fecha: " + e.getMessage());
        }
        
        //Vector citasData = ConsultasSQLPerrucaria.recuperarTodaAsCitasDunhaData(fechaConvertida);
        
        List<CitaPerrucaria> citasData = ConsultasSQLPerrucaria.recuperarTodaAsCitasDunhaData(fechaConvertida);

        return citasData;
    }
    
    private void btnAmosarCitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAmosarCitasActionPerformed
        // TODO add your handling code here:
        List<CitaPerrucaria> citasData = obtenerHoras();
        
        colorRbtsVerde();
        
        if (citasData == null) {
            JOptionPane.showMessageDialog(this, "Debe escribir unha data para continuar", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            for (CitaPerrucaria horasCitaPerrucaria : citasData) {
                if (horasCitaPerrucaria.getHora() == 10) { rbt10.setForeground(Color.red); }
                if (horasCitaPerrucaria.getHora() == 11) { rbt11.setForeground(Color.red); }
                if (horasCitaPerrucaria.getHora() == 12) { rbt12.setForeground(Color.red); }
                if (horasCitaPerrucaria.getHora() == 16) { rbt16.setForeground(Color.red); }
                if (horasCitaPerrucaria.getHora() == 17) { rbt17.setForeground(Color.red); }
            }
        }
        
        habilitarHorasCitaPerrucaria();
    }//GEN-LAST:event_btnAmosarCitasActionPerformed

    private void desplegableBuscador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desplegableBuscador1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desplegableBuscador1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmosarCitas;
    private javax.swing.JButton btnNovaData;
    private javax.swing.JButton btnPechar;
    private javax.swing.JButton btnReservar;
    private javax.swing.ButtonGroup btngrpHoras;
    private javax.swing.JComboBox cmbCan;
    private javax.swing.JComboBox cmbPropietario;
    private org.yourorg.desplegablebuscador.DesplegableBuscador desplegableBuscador1;
    private javax.swing.JLabel lblCan;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JPanel pnlBotons;
    private javax.swing.JPanel pnlCita;
    private javax.swing.JRadioButton rbt10;
    private javax.swing.JRadioButton rbt11;
    private javax.swing.JRadioButton rbt12;
    private javax.swing.JRadioButton rbt16;
    private javax.swing.JRadioButton rbt17;
    private javax.swing.JTextField txtData;
    // End of variables declaration//GEN-END:variables
    private javax.swing.DefaultComboBoxModel<Propietario> modeloPropietarios;
    private javax.swing.DefaultComboBoxModel<Object> modeloPropietarios2;
    private javax.swing.DefaultComboBoxModel<Can> modeloCans;
}
