/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import bd.ConsultasSQL;
import clases.Can;
import clases.Propietario;
import clases.Raza;
import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author DAM 2 
 */
public class IFrmAltaCansRazas extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrmAltaCansRazas
     */
    public IFrmAltaCansRazas() {
        initComponents();
        modeloRazas=new DefaultListModel<Raza>();
        lstRazas.setModel(modeloRazas);    
        cargarRazas();
        modeloPropietarios=new DefaultListModel<Propietario>();
        lstPropietarios.setModel(modeloPropietarios);    
        cargarPropietarios();        
    }

    private void cargarPropietarios()
    {
        modeloPropietarios.removeAllElements();
        Vector propietarios=ConsultasSQL.recuperarTodolosPropietarios();
        if(propietarios==null)
        {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar os propietarios. Error -7. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;            
        }
        else
        {
            for(int i=0;i<propietarios.size();i++)
            {
                modeloPropietarios.addElement((Propietario)propietarios.elementAt(i));
            }
        }        
    }    
    
    private void cargarRazas()
    {
        modeloRazas.removeAllElements();
        Vector razas=ConsultasSQL.recuperarTodalasRazas();
        if(razas==null)
        {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao recuperar as razas. Error -6. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;            
        }
        else
        {
            for(int i=0;i<razas.size();i++)
            {
                modeloRazas.addElement((Raza)razas.elementAt(i));
            }
        }        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlSuperior = new javax.swing.JPanel();
        lblAccion = new javax.swing.JLabel();
        cmbTipoAlta = new javax.swing.JComboBox();
        pnlCentral = new javax.swing.JPanel();
        pnlNovoCan = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblChip = new javax.swing.JLabel();
        lblRazas = new javax.swing.JLabel();
        lblPropietarios = new javax.swing.JLabel();
        scpPropietarios = new javax.swing.JScrollPane();
        lstPropietarios = new javax.swing.JList();
        scpRazas = new javax.swing.JScrollPane();
        lstRazas = new javax.swing.JList();
        txtNome = new javax.swing.JTextField();
        txtChip = new javax.swing.JTextField();
        btnGardarCan = new javax.swing.JButton();
        btnPecharCan = new javax.swing.JButton();
        pnlNovaRaza = new javax.swing.JPanel();
        lblRaza = new javax.swing.JLabel();
        txtRaza = new javax.swing.JTextField();
        btnGardarRaza = new javax.swing.JButton();
        btnPecharRaza = new javax.swing.JButton();

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Novo can");

        pnlSuperior.setPreferredSize(new java.awt.Dimension(491, 50));
        pnlSuperior.setLayout(new java.awt.GridBagLayout());

        lblAccion.setText("Realizar alta de");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlSuperior.add(lblAccion, gridBagConstraints);

        cmbTipoAlta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cans", "Razas" }));
        cmbTipoAlta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoAltaItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        pnlSuperior.add(cmbTipoAlta, gridBagConstraints);

        getContentPane().add(pnlSuperior, java.awt.BorderLayout.NORTH);

        pnlCentral.setLayout(new java.awt.CardLayout());

        pnlNovoCan.setLayout(new java.awt.GridBagLayout());

        lblNome.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlNovoCan.add(lblNome, gridBagConstraints);

        lblChip.setText("Chip");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlNovoCan.add(lblChip, gridBagConstraints);

        lblRazas.setText("Razas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlNovoCan.add(lblRazas, gridBagConstraints);

        lblPropietarios.setText("Propietarios");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlNovoCan.add(lblPropietarios, gridBagConstraints);

        lstPropietarios.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstPropietarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scpPropietarios.setViewportView(lstPropietarios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        pnlNovoCan.add(scpPropietarios, gridBagConstraints);

        lstRazas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstRazas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scpRazas.setViewportView(lstRazas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        pnlNovoCan.add(scpRazas, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        pnlNovoCan.add(txtNome, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        pnlNovoCan.add(txtChip, gridBagConstraints);

        btnGardarCan.setText("Gardar");
        btnGardarCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGardarCanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlNovoCan.add(btnGardarCan, gridBagConstraints);

        btnPecharCan.setText("Pechar");
        btnPecharCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecharCanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        pnlNovoCan.add(btnPecharCan, gridBagConstraints);

        pnlCentral.add(pnlNovoCan, "CAN");

        pnlNovaRaza.setLayout(new java.awt.GridBagLayout());

        lblRaza.setText("Raza");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlNovaRaza.add(lblRaza, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlNovaRaza.add(txtRaza, gridBagConstraints);

        btnGardarRaza.setText("Gardar");
        btnGardarRaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGardarRazaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 10);
        pnlNovaRaza.add(btnGardarRaza, gridBagConstraints);

        btnPecharRaza.setText("Pechar");
        btnPecharRaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPecharRazaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        pnlNovaRaza.add(btnPecharRaza, gridBagConstraints);

        pnlCentral.add(pnlNovaRaza, "RAZA");

        getContentPane().add(pnlCentral, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 507, 502);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoAltaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoAltaItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange()==ItemEvent.SELECTED)
        {
            if(cmbTipoAlta.getSelectedIndex()==0)
            {
                CardLayout panelCentralLayout=(CardLayout)this.pnlCentral.getLayout();
                panelCentralLayout.show(this.pnlCentral, "CAN");
                setTitle("Novo can");
            }
            else
            {
                CardLayout panelCentralLayout=(CardLayout)this.pnlCentral.getLayout();
                panelCentralLayout.show(this.pnlCentral, "RAZA");                                    
                setTitle("Nova raza");
            }
        }
    }//GEN-LAST:event_cmbTipoAltaItemStateChanged

    private void btnPecharRazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecharRazaActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnPecharRazaActionPerformed

    private void btnGardarRazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGardarRazaActionPerformed
        // TODO add your handling code here:
        String raza=txtRaza.getText().trim();
        if(raza.compareTo("")==0)
        {
            JOptionPane.showMessageDialog(this, "Debe indicar o nome da raza", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        Raza razaCan=new Raza(0, raza);
        if(ConsultasSQL.insertarRaza(razaCan)==-1)
        {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao insertar a raza. Error -5. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Raza gardada", "Éxito", JOptionPane.INFORMATION_MESSAGE);            
        }
        dispose();        
    }//GEN-LAST:event_btnGardarRazaActionPerformed

    private void btnPecharCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPecharCanActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnPecharCanActionPerformed

    private void btnGardarCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGardarCanActionPerformed
        // TODO add your handling code here:
        String nome=txtNome.getText().trim();
        if(nome.compareTo("")==0)
        {
            JOptionPane.showMessageDialog(this, "Debe indicar o nome do can", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String chip=txtChip.getText().trim();
        if(chip.compareTo("")==0)
        {
            JOptionPane.showMessageDialog(this, "Debe indicar o chip do can", "Atención", JOptionPane.WARNING_MESSAGE);
            return;
        }        
        
        switch(ConsultasSQL.existeChip(chip))
        {
            case 1: JOptionPane.showMessageDialog(this, "O chip indicado xa existe", "Atención", JOptionPane.WARNING_MESSAGE);
                    return;
           case 2: JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao comprobar a existencia do chip. Erro -8. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
                    return;
        }        
        
        if(lstRazas.getSelectedIndex()==-1)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar a raza do can", "Atención", JOptionPane.WARNING_MESSAGE);
            return;            
        }
        
        int codRaza=modeloRazas.getElementAt(lstRazas.getSelectedIndex()).getCodRaza();
        
        if(lstPropietarios.getSelectedIndex()==-1)
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar o propietario do can", "Atención", JOptionPane.WARNING_MESSAGE);
            return;            
        }
        
        String dniPropietario=modeloPropietarios.getElementAt(lstPropietarios.getSelectedIndex()).getDni();        
        
        Can can=new Can(chip, nome, codRaza, dniPropietario);
        if(ConsultasSQL.insertarCan(can)==-1)
        {
            JOptionPane.showMessageDialog(this, "Ocurreu un erro de base de datos ao insertar o can. Erro -9. Póñase en contacto co administrador", "Atención", JOptionPane.WARNING_MESSAGE);
            return;            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Can gardado", "Éxito", JOptionPane.INFORMATION_MESSAGE);            
        }
        dispose();                
    }//GEN-LAST:event_btnGardarCanActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGardarCan;
    private javax.swing.JButton btnGardarRaza;
    private javax.swing.JButton btnPecharCan;
    private javax.swing.JButton btnPecharRaza;
    private javax.swing.JComboBox cmbTipoAlta;
    private javax.swing.JLabel lblAccion;
    private javax.swing.JLabel lblChip;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPropietarios;
    private javax.swing.JLabel lblRaza;
    private javax.swing.JLabel lblRazas;
    private javax.swing.JList lstPropietarios;
    private javax.swing.JList lstRazas;
    private javax.swing.JPanel pnlCentral;
    private javax.swing.JPanel pnlNovaRaza;
    private javax.swing.JPanel pnlNovoCan;
    private javax.swing.JPanel pnlSuperior;
    private javax.swing.JScrollPane scpPropietarios;
    private javax.swing.JScrollPane scpRazas;
    private javax.swing.JTextField txtChip;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRaza;
    // End of variables declaration//GEN-END:variables
    private javax.swing.DefaultListModel<Raza> modeloRazas;
    private javax.swing.DefaultListModel<Propietario> modeloPropietarios;    
}
