/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package presentacion;

import static bd.ConsultasSQL.recuperarTodosOsPropietarios;
import clases.Propietario;
import java.util.List;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowSorter.SortKey;
import javax.swing.table.DefaultTableModel;
import static presentacion.XestorDeXanelas.pecharIFrmListadoPropietariosAberto;
import static presentacion.XestorDeXanelas.podeseAbrirIFrmDatosPropietario;

/**
 *
 * @author Xabier Cendón
 */
public class IFrameListadoPropietarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrameListadoPropietrios
     */
    public IFrameListadoPropietarios() {
        initComponents();
        modeloPropietarios = (DefaultTableModel) tblResultados.getModel();
        obterEMostrarResultados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btngrpOrde = new javax.swing.ButtonGroup();
        pnlOrde = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblTítulo = new javax.swing.JLabel();
        scpResultados = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Mantenimiento");
        setMinimumSize(new java.awt.Dimension(500, 250));
        setPreferredSize(new java.awt.Dimension(500, 450));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pnlOrde.setMinimumSize(new java.awt.Dimension(50, 80));
        pnlOrde.setLayout(new java.awt.GridBagLayout());

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/propietario.png"))); // NOI18N
        lblLogo.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.3;
        pnlOrde.add(lblLogo, gridBagConstraints);

        lblTítulo.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblTítulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTítulo.setText("Propietarios");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.7;
        pnlOrde.add(lblTítulo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        getContentPane().add(pnlOrde, gridBagConstraints);

        tblResultados.setAutoCreateRowSorter(true);
        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "DNI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultadosMouseClicked(evt);
            }
        });
        scpResultados.setViewportView(tblResultados);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 584;
        gridBagConstraints.ipady = 216;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 20);
        getContentPane().add(scpResultados, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        pecharIFrmListadoPropietariosAberto();
    }//GEN-LAST:event_formInternalFrameClosed

    private void tblResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultadosMouseClicked
        int filaVisual = tblResultados.getSelectedRow();
        if (filaVisual == -1) return; // Non hai fila seleccionada
        
        //Averiguamos que columna ten a orde
        RowSorter<?> sorter = tblResultados.getRowSorter();
        if (sorter != null) {
            List<? extends SortKey> sortKeys = sorter.getSortKeys();
            if (!sortKeys.isEmpty()) {
                int columnIndex = sortKeys.get(0).getColumn();
                SortOrder order = sortKeys.get(0).getSortOrder();
                System.out.println("Ordeado por columna: " + columnIndex + " (" + order + ")");
            }
        }
        //fin averiguación

        int filaModelo = tblResultados.convertRowIndexToModel(filaVisual);
        Propietario propietario = (Propietario) modeloPropietarios.getValueAt(filaModelo, 0);
        if (podeseAbrirIFrmDatosPropietario()) {
            IFrmDatosPropietario iFrmDatosPropietario = new IFrmDatosPropietario(propietario, this);
            getParent().add(iFrmDatosPropietario);
            iFrmDatosPropietario.show();
            XestorDeXanelas.abrirIFrmDatosPropietario();
        } else {
            JOptionPane.showMessageDialog(this, "Xa hai unha xanela de datos do propietario aberta.");
        }

    }//GEN-LAST:event_tblResultadosMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        obterEMostrarResultados();
    }//GEN-LAST:event_formFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngrpOrde;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblTítulo;
    private javax.swing.JPanel pnlOrde;
    private javax.swing.JScrollPane scpResultados;
    private javax.swing.JTable tblResultados;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel modeloPropietarios;

    void obterEMostrarResultados() {
        vaciarLista();

        ArrayList<Propietario> listadoPropietarios;
        listadoPropietarios = recuperarTodosOsPropietarios();
     
        if (listadoPropietarios.size() > 0) {
            for (Propietario propietario : listadoPropietarios) {
                modeloPropietarios.setNumRows(modeloPropietarios.getRowCount() + 1);
                modeloPropietarios.setValueAt(propietario, modeloPropietarios.getRowCount() - 1, 0);
                modeloPropietarios.setValueAt(propietario.getDni(), modeloPropietarios.getRowCount() - 1, 1);
            }
        }

    }

    private void vaciarLista() {
        modeloPropietarios.setRowCount(0);
    }
}
