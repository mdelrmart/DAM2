/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import static bd.ConsultasSQL.actualizarPropietario;
import static bd.ConsultasSQL.asiganrMascotasANovoPropietario;
import static bd.ConsultasSQL.eliminarTodolosCansDunPropietario;
import static bd.ConsultasSQL.eliminarUnPropietarioDadoSeuDni;
import static bd.ConsultasSQL.recuperarPropietario;
import static bd.ConsultasSQL.recuperarTodolosCansDunPropietario;
import clases.Propietario;
import javax.swing.JOptionPane;
import static presentacion.XestorDeXanelas.pecharFrmDatosPropietarioAberto;

/**
 *
 * @author DAM IES Chan do Monte
 */
public class IFrmDatosPropietario extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrmAltaPropietarios
     */
    private Propietario propietario;
    IFrameListadoPropietarios pai;


    public IFrmDatosPropietario(Propietario propietario, IFrameListadoPropietarios pai) {
        initComponents();
        this.propietario = propietario;
        this.pai = pai;
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSeparator1 = new javax.swing.JSeparator();
        lblDni = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblApelido1 = new javax.swing.JLabel();
        lblApelido2 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        txtApelido1 = new javax.swing.JTextField();
        txtEMail = new javax.swing.JTextField();
        txtApelido2 = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        pnlBotons = new javax.swing.JPanel();
        btnGardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Datos do propietario");
        setMinimumSize(new java.awt.Dimension(600, 200));
        setPreferredSize(new java.awt.Dimension(600, 200));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblDni.setText("DNI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        getContentPane().add(lblDni, gridBagConstraints);

        lblNome.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        getContentPane().add(lblNome, gridBagConstraints);

        lblTelefono.setText("Tel√©fono");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        getContentPane().add(lblTelefono, gridBagConstraints);

        lblApelido1.setText("Apelido 1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        getContentPane().add(lblApelido1, gridBagConstraints);

        lblApelido2.setText("Apelido 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        getContentPane().add(lblApelido2, gridBagConstraints);

        lblEmail.setText("EMail");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        getContentPane().add(lblEmail, gridBagConstraints);

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(txtNome, gridBagConstraints);

        txtDni.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        getContentPane().add(txtDni, gridBagConstraints);

        txtApelido1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApelido1KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(txtApelido1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(txtEMail, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(txtApelido2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(txtTelefono, gridBagConstraints);

        pnlBotons.setLayout(new javax.swing.BoxLayout(pnlBotons, javax.swing.BoxLayout.X_AXIS));

        btnGardar.setText("Gardar Datos");
        btnGardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGardarActionPerformed(evt);
            }
        });
        pnlBotons.add(btnGardar);

        btnEliminar.setText("Eliminar Propietario");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlBotons.add(btnEliminar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        getContentPane().add(pnlBotons, gridBagConstraints);

        setBounds(0, 0, 601, 190);
    }// </editor-fold>//GEN-END:initComponents


    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        pecharFrmDatosPropietarioAberto();
    }//GEN-LAST:event_formInternalFrameClosed

    private void txtApelido1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApelido1KeyTyped
        comprobarCamposObrigatorios();
    }//GEN-LAST:event_txtApelido1KeyTyped

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        comprobarCamposObrigatorios();
    }//GEN-LAST:event_txtNomeKeyTyped

    private void btnGardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGardarActionPerformed
        int confirmacion = JOptionPane.showConfirmDialog(this, "Desexa gardar os cambios?");

        switch (confirmacion) {
            case 0:
                propietario.setNome(txtNome.getText());
                propietario.setAp1(txtApelido1.getText());
                propietario.setAp2(txtApelido2.getText());
                propietario.seteMail(txtEMail.getText());
                propietario.setTlf(txtTelefono.getText());
                actualizarPropietario(txtDni.getText(), propietario);
                JOptionPane.showMessageDialog(this, "Datos actualizados con √©xito.");
            case 1:
                dispose();
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btnGardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int confirmacionPropietario = JOptionPane.showConfirmDialog(this, "Desexa eliminar o propietario?");

        if (confirmacionPropietario != 0) {
            return;
        }

        if (recuperarTodolosCansDunPropietario(txtDni.getText()).size() > 0) {
            int confirmacionReasignacion = JOptionPane.showConfirmDialog(this, "Desexa asignar as mascotas do proietario a outro? Senon, ser√°n eliminados.");
            switch (confirmacionReasignacion) {
                case 0:
                    String novoDni = JOptionPane.showInputDialog(this, "Introduza o DNI do novo propietario (ten que estar dado de alta previamente).");
                    if (recuperarPropietario(novoDni) != null) {
                        asiganrMascotasANovoPropietario(propietario.getDni(), novoDni);
                        JOptionPane.showMessageDialog(this, "Mascotas reasginadas con √©xito.");
                    } else {
                        JOptionPane.showMessageDialog(this, "O novo propietario parece non estar dado de alta. Conservarase o anterior.");
                        return;
                    }
                    break;
                case 1:
                    eliminarTodolosCansDunPropietario(txtDni.getText());
                    JOptionPane.showMessageDialog(this, "Mascotas eliminadas con √©xito.");
                    break;
                default:
                    return;
            }

        }

        eliminarUnPropietarioDadoSeuDni(txtDni.getText());
        JOptionPane.showMessageDialog(this, "Propietario eliminado con √©xito.");
        dispose();

    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGardar;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblApelido1;
    private javax.swing.JLabel lblApelido2;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JPanel pnlBotons;
    private javax.swing.JTextField txtApelido1;
    private javax.swing.JTextField txtApelido2;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEMail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatos() {
        txtDni.setText(propietario.getDni());
        txtNome.setText(propietario.getNome());
        txtTelefono.setText(propietario.getTlf());
        txtApelido1.setText(propietario.getAp1());
        txtEMail.setText(propietario.geteMail());
        txtApelido2.setText(propietario.getAp2());
    }

    private void comprobarCamposObrigatorios() {
        if (txtNome.getText().isBlank() || txtApelido1.getText().isBlank()) {
            btnGardar.setEnabled(false);
        } else {
            btnGardar.setEnabled(true);
        }
    }

}
