/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import bd.Conexion;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.SwingUtilities;
import javax.swing.border.Border;

/**
 *
 * @author DAM 2
 */
public class DlgValidacionUsuario extends javax.swing.JDialog {

    static Border bDefault;

    /**
     * Creates new form DlgValidacionUsuario
     */
    public DlgValidacionUsuario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        //Poñemos o foco na password
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                pwfContrasinal.requestFocus();
            }
        });
        
        //Oculto el panel avanzado y reduzco el tamaño de la ventana
        jPAvanzado.setVisible(false);
        this.setSize(WIDTH, 350);
        
        //Me guardo un border por defecto para poder resetearlo despues
        bDefault = txtUsuario.getBorder();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPCabecera = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLVal = new javax.swing.JLabel();
        jPUser = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblContrasinal = new javax.swing.JLabel();
        pwfContrasinal = new javax.swing.JPasswordField();
        jPBotones = new javax.swing.JPanel();
        jLAjustes = new javax.swing.JLabel();
        jLabelLogin = new javax.swing.JLabel();
        jPAvanzado = new javax.swing.JPanel();
        lblIPServidor = new javax.swing.JLabel();
        txtIPServidor = new javax.swing.JTextField();
        lblPorto = new javax.swing.JLabel();
        txtPorto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Validación de usuario");
        setMinimumSize(new java.awt.Dimension(375, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.png"))); // NOI18N
        jPCabecera.add(jLabel2);

        getContentPane().add(jPCabecera);

        jPanel1.setMinimumSize(new java.awt.Dimension(10, 30));
        jPanel1.add(jLVal);

        getContentPane().add(jPanel1);

        jPUser.setPreferredSize(new java.awt.Dimension(375, 100));
        jPUser.setRequestFocusEnabled(false);

        lblUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user(1).png"))); // NOI18N
        lblUsuario.setIconTextGap(5);

        txtUsuario.setText("root");
        txtUsuario.setName("Usuario"); // NOI18N
        txtUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsuarioFocusGained(evt);
            }
        });
        txtUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsuarioKeyPressed(evt);
            }
        });

        lblContrasinal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/padlock.png"))); // NOI18N

        pwfContrasinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pwfContrasinalFocusGained(evt);
            }
        });
        pwfContrasinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pwfContrasinalKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPUserLayout = new javax.swing.GroupLayout(jPUser);
        jPUser.setLayout(jPUserLayout);
        jPUserLayout.setHorizontalGroup(
            jPUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPUserLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPUserLayout.createSequentialGroup()
                        .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPUserLayout.createSequentialGroup()
                        .addComponent(lblContrasinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pwfContrasinal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        jPUserLayout.setVerticalGroup(
            jPUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPUserLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsuario)
                    .addComponent(lblUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pwfContrasinal)
                    .addComponent(lblContrasinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPUser);

        jPBotones.setPreferredSize(new java.awt.Dimension(375, 50));
        jPBotones.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 0));

        jLAjustes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/setting-lines.png"))); // NOI18N
        jLAjustes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAjustesMouseClicked(evt);
            }
        });
        jPBotones.add(jLAjustes);

        jLabelLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/enter.png"))); // NOI18N
        jLabelLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLoginMouseClicked(evt);
            }
        });
        jPBotones.add(jLabelLogin);

        getContentPane().add(jPBotones);

        jPAvanzado.setPreferredSize(new java.awt.Dimension(375, 100));

        lblIPServidor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/internet.png"))); // NOI18N
        lblIPServidor.setText("IP ");
        lblIPServidor.setIconTextGap(10);

        txtIPServidor.setText("localhost");
        txtIPServidor.setMinimumSize(new java.awt.Dimension(35, 35));
        txtIPServidor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIPServidorFocusGained(evt);
            }
        });
        txtIPServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPServidorActionPerformed(evt);
            }
        });
        txtIPServidor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIPServidorKeyPressed(evt);
            }
        });

        lblPorto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/internet.png"))); // NOI18N
        lblPorto.setText("PORT");
        lblPorto.setIconTextGap(10);

        txtPorto.setText("3306");
        txtPorto.setMinimumSize(new java.awt.Dimension(35, 35));
        txtPorto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPortoFocusGained(evt);
            }
        });
        txtPorto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortoActionPerformed(evt);
            }
        });
        txtPorto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPortoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPAvanzadoLayout = new javax.swing.GroupLayout(jPAvanzado);
        jPAvanzado.setLayout(jPAvanzadoLayout);
        jPAvanzadoLayout.setHorizontalGroup(
            jPAvanzadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAvanzadoLayout.createSequentialGroup()
                .addGroup(jPAvanzadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIPServidor)
                    .addComponent(lblPorto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAvanzadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPorto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIPServidor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPAvanzadoLayout.setVerticalGroup(
            jPAvanzadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAvanzadoLayout.createSequentialGroup()
                .addGroup(jPAvanzadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIPServidor)
                    .addComponent(txtIPServidor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAvanzadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPorto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPorto))
                .addGap(51, 51, 51))
        );

        getContentPane().add(jPAvanzado);

        setSize(new java.awt.Dimension(398, 506));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if (!conectado)
            System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    private void txtIPServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPServidorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPServidorActionPerformed

    private void txtPortoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPortoActionPerformed

    private void jLAjustesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAjustesMouseClicked
        // TODO add your handling code here:

        //Cada vez que clicko en el icono de ajustes compruebo si estoy mostrando el panel de avanzado y lo cambio de estado
        if (!jPAvanzado.isVisible()) {
            this.setSize(WIDTH, 450);
            jPAvanzado.setVisible(true);
        } else {
            this.setSize(WIDTH, 350);
            jPAvanzado.setVisible(false);
        }


    }//GEN-LAST:event_jLAjustesMouseClicked

    private void jLabelLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLoginMouseClicked
      valida();
    }//GEN-LAST:event_jLabelLoginMouseClicked

    private void valida(){
        //REGEX  para controlar el formato de la IP
        String zero255 = "([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])";
        String IP_REGEXP = zero255 + "\\." + zero255 + "\\." + zero255 + "\\." + zero255;
        Pattern IP_PATERN = Pattern.compile(IP_REGEXP);

        //Si le diste a conectar, reseteo el ultimo codigo de  error para que no muestre nada
        jLVal.setText("");
        jLVal.setForeground(Color.red);

        // Recojo los values de cada campo.      
        String usuario = txtUsuario.getText().trim();
        String contrasinal = new String(pwfContrasinal.getPassword());
        
        //Los valido (primero que no sean null)
        if (usuario.compareTo("") == 0) {
            txtUsuario.setBorder(BorderFactory.createLineBorder(Color.red));
            jLVal.setText("Debe indicar un nome de usuario.");
            return;
        }

//        if (contrasinal.compareTo("") == 0) {
//            pwfContrasinal.setBorder(BorderFactory.createLineBorder(Color.red));
//            jLVal.setText("Debe introducir un contrasinal.");
//            return;
//        }

        //La IP checkeo que sea distinta de null y valida
        String ipServidor = txtIPServidor.getText().trim();
        if (ipServidor.compareTo("") == 0) {
            txtIPServidor.setBorder(BorderFactory.createLineBorder(Color.red));
            txtIPServidor.setSize(22, 35);
            jLVal.setText("Debe introducir unha dirección IP.");
            return;
        } else if (!ipServidor.matches("localhost") && !IP_PATERN.matcher(ipServidor).matches()) {
            txtIPServidor.setBorder(BorderFactory.createLineBorder(Color.red));
            jLVal.setText("Debe introducir unha dirección IP valida.");
            txtIPServidor.setSize(22, 35);
            return;
        }

        //El puerto que no sea null y de ser algo que sea numerico
        String porto = txtPorto.getText().trim();
        if (porto.compareTo("") == 0) {
            txtPorto.setBorder(BorderFactory.createLineBorder(Color.red));
            jLVal.setText("Debe introducir un Porto na seccion de axustes.");
            
            return;
        } else if (!porto.matches("[0-9]*")) {
            txtPorto.setBorder(BorderFactory.createLineBorder(Color.red));
            jLVal.setText("O porto debe ser un valor numérico.");
            return;
        }

        //Si llego aquí intento conectar; modifique los return de Conexion.conectar  para el switch que sigue
        int resultado = Conexion.conectar(ipServidor, porto, usuario, "clinica", contrasinal);

        
        //Controlo que valor devuelve segun si es correcto o no,  si no, segun el mensaje de excepcion muestro que campos están mal
        switch (resultado) {
            case 0:
                conectado = true;
                dispose();
                break;
            
            //Si es un error -3 quiere decir que fallo la autentificacion de usuario
            case -3:
                pwfContrasinal.setBorder(BorderFactory.createLineBorder(Color.red));
                txtUsuario.setBorder(BorderFactory.createLineBorder(Color.red));
                jLVal.setText("Revise os campos de usuario e contrasinal.");
                return;
            
            //Si es -4 el error fue de conexion
            case -4:
                txtIPServidor.setBorder(BorderFactory.createLineBorder(Color.red));
                txtPorto.setBorder(BorderFactory.createLineBorder(Color.red));
                jLVal.setText("Revise a información de rede.");
                break;
            default:
                break;
        }
        
    }
    private void txtUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsuarioFocusGained
    
    }//GEN-LAST:event_txtUsuarioFocusGained

    private void pwfContrasinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pwfContrasinalFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_pwfContrasinalFocusGained

    private void txtIPServidorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIPServidorFocusGained
        
    }//GEN-LAST:event_txtIPServidorFocusGained

    private void txtPortoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPortoFocusGained
        
    }//GEN-LAST:event_txtPortoFocusGained

    private void txtUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsuarioKeyPressed
        //Si el campo que tenia un error actualiza su valor, dejara de estar marcado como error        
        if (txtUsuario.getBorder() != bDefault) {
            txtUsuario.setBorder(bDefault);
        }
    }//GEN-LAST:event_txtUsuarioKeyPressed

    private void pwfContrasinalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwfContrasinalKeyPressed
        //Si el campo que tenia un error actualiza su valor, dejara de estar marcado como error  
        if (pwfContrasinal.getBorder() != bDefault) {
            pwfContrasinal.setBorder(bDefault);
        }
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            valida();
        }
    }//GEN-LAST:event_pwfContrasinalKeyPressed

    private void txtIPServidorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIPServidorKeyPressed
        //Si el campo que tenia un error actualiza su valor, dejara de estar marcado como error  
        if (txtIPServidor.getBorder() != bDefault) {
            txtIPServidor.setBorder(bDefault);
        }
    }//GEN-LAST:event_txtIPServidorKeyPressed

    private void txtPortoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortoKeyPressed
        //Si el campo que tenia un error actualiza su valor, dejara de estar marcado como error  
        if (txtPorto.getBorder() != bDefault) {
            txtPorto.setBorder(bDefault);
        }
    }//GEN-LAST:event_txtPortoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgValidacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgValidacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgValidacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgValidacionUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgValidacionUsuario dialog = new DlgValidacionUsuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLAjustes;
    private javax.swing.JLabel jLVal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JPanel jPAvanzado;
    private javax.swing.JPanel jPBotones;
    private javax.swing.JPanel jPCabecera;
    private javax.swing.JPanel jPUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblContrasinal;
    private javax.swing.JLabel lblIPServidor;
    private javax.swing.JLabel lblPorto;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField pwfContrasinal;
    private javax.swing.JTextField txtIPServidor;
    private javax.swing.JTextField txtPorto;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
    boolean conectado = false;
}
