/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import bd.Conexion;
import bd.ConsultasSQL;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import utilidades.Datas;
import utilidades.JTextFieldHintUI;


/**
 *
 * @author DAM 2 2018-2019
 */
public class IFrmImprimirFacturas extends javax.swing.JInternalFrame {

    //JFrame pai;
    String sSQL;
    FrmPrincipal pai;

    private ResultSet lista;
    private HashMap hm;

    /**
     * Creates new form IFrmImprimirFacturas
     */
    public IFrmImprimirFacturas(FrmPrincipal pai) throws MalformedURLException, HelpSetException {
        initComponents();
        this.pai = pai;
        //pai=(JFrame)getParent();

        setResizable(true);
        lblTitulo.setHorizontalAlignment(SwingConstants.CENTER);
        txtResultado.setHorizontalAlignment(SwingConstants.RIGHT);
        filtrar();

        hm = new HashMap();
        
        txtNFacturaInicial.setUI(new JTextFieldHintUI("Nº inicio", Color.gray));
        txtNFacturaFinal.setUI(new JTextFieldHintUI("Nº fin", Color.gray));
        txtCliente.setUI(new JTextFieldHintUI("Nome ou parte", Color.gray));
        txtDataInicial.setUI(new JTextFieldHintUI("Data inicio", Color.gray));
        txtDataFinal.setUI(new JTextFieldHintUI("Data fin", Color.gray));
        
        cargarAyuda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTitulo = new javax.swing.JLabel();
        pnlFormulario = new javax.swing.JPanel();
        pnlCliente = new javax.swing.JPanel();
        txtCliente = new javax.swing.JTextField();
        pnlNumeroFactura = new javax.swing.JPanel();
        txtNFacturaInicial = new javax.swing.JTextField();
        txtNFacturaFinal = new javax.swing.JTextField();
        pnlData = new javax.swing.JPanel();
        txtDataInicial = new javax.swing.JTextField();
        txtDataFinal = new javax.swing.JTextField();
        pnlResultado = new javax.swing.JPanel();
        txtResultado = new javax.swing.JTextField();
        pnlBotones = new javax.swing.JPanel();
        btnFiltrar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setMinimumSize(new java.awt.Dimension(500, 800));
        setPreferredSize(new java.awt.Dimension(600, 800));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblTitulo.setFont(new java.awt.Font("Ubuntu", 1, 30)); // NOI18N
        lblTitulo.setText("Impresión de Facturas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 10);
        getContentPane().add(lblTitulo, gridBagConstraints);

        pnlFormulario.setPreferredSize(new java.awt.Dimension(50, 50));
        pnlFormulario.setLayout(new java.awt.GridBagLayout());

        pnlCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        pnlCliente.setLayout(new java.awt.GridLayout(1, 0));

        txtCliente.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txtCliente.setNextFocusableComponent(txtDataInicial);
        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        pnlCliente.add(txtCliente);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlFormulario.add(pnlCliente, gridBagConstraints);

        pnlNumeroFactura.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nº Factura", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        pnlNumeroFactura.setLayout(new java.awt.GridLayout(1, 0));

        txtNFacturaInicial.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txtNFacturaInicial.setFocusCycleRoot(true);
        txtNFacturaInicial.setNextFocusableComponent(txtNFacturaFinal);
        pnlNumeroFactura.add(txtNFacturaInicial);

        txtNFacturaFinal.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txtNFacturaFinal.setNextFocusableComponent(txtCliente);
        pnlNumeroFactura.add(txtNFacturaFinal);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlFormulario.add(pnlNumeroFactura, gridBagConstraints);

        pnlData.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data --/--/--", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        pnlData.setLayout(new java.awt.GridLayout(1, 0));

        txtDataInicial.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txtDataInicial.setNextFocusableComponent(txtDataFinal);
        pnlData.add(txtDataInicial);

        txtDataFinal.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        txtDataFinal.setNextFocusableComponent(btnFiltrar);
        pnlData.add(txtDataFinal);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlFormulario.add(pnlData, gridBagConstraints);

        pnlResultado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N
        pnlResultado.setLayout(new java.awt.GridLayout(1, 0));

        txtResultado.setEditable(false);
        txtResultado.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtResultado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtResultado.setText("3 facturas seleccionadas");
        txtResultado.setDisabledTextColor(new java.awt.Color(1, 1, 1));
        txtResultado.setEnabled(false);
        txtResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtResultadoMouseClicked(evt);
            }
        });
        txtResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResultadoActionPerformed(evt);
            }
        });
        pnlResultado.add(txtResultado);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlFormulario.add(pnlResultado, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 145;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(pnlFormulario, gridBagConstraints);

        pnlBotones.setLayout(new java.awt.GridBagLayout());

        btnFiltrar.setBackground(new java.awt.Color(40, 100, 246));
        btnFiltrar.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnFiltrar.setForeground(new java.awt.Color(254, 254, 254));
        btnFiltrar.setMnemonic('B');
        btnFiltrar.setText("Filtrar");
        btnFiltrar.setNextFocusableComponent(btnLimpar);
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlBotones.add(btnFiltrar, gridBagConstraints);

        btnLimpar.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        btnLimpar.setMnemonic('L');
        btnLimpar.setText("Limpar");
        btnLimpar.setNextFocusableComponent(btnImprimir);
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlBotones.add(btnLimpar, gridBagConstraints);

        btnImprimir.setBackground(new java.awt.Color(40, 100, 246));
        btnImprimir.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        btnImprimir.setForeground(new java.awt.Color(254, 254, 254));
        btnImprimir.setMnemonic('i');
        btnImprimir.setText("Imprimir");
        btnImprimir.setNextFocusableComponent(btnFiltrar);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        pnlBotones.add(btnImprimir, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(pnlBotones, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        txtNFacturaInicial.setText("");
        txtNFacturaFinal.setText("");
        txtCliente.setText("");
        txtDataInicial.setText("");
        txtDataFinal.setText("");
        filtrar();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        DateTimeFormatter formatoEntrada = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        DateTimeFormatter formatoSalida = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        String cliente = txtCliente.getText();
        String dataInicial = txtDataInicial.getText();
        String dataFinal = txtDataFinal.getText();
        String numFacInicial = txtNFacturaInicial.getText();
        String numFacFinal = txtNFacturaFinal.getText();

        LocalDate dataInicialLocalDate = LocalDate.parse(dataInicial, formatoEntrada);
        String dataInicialConv = dataInicialLocalDate.format(formatoSalida);

        LocalDate dataFinalLocalDate = LocalDate.parse(dataFinal, formatoEntrada);
        String dataFinalConv = dataFinalLocalDate.format(formatoSalida);

        try {
            String strRuta = "src/informes/report1.jrxml";
            JasperReport informeJasper = JasperCompileManager.compileReport(strRuta);

            String whereClause = "t.datafactura BETWEEN '" + dataInicialConv + "' AND '" + dataFinalConv
                    + "' AND t.numfactura BETWEEN '" + numFacInicial + "' AND '" + numFacFinal
                    + "' AND t.cliente LIKE '%" + cliente + "%'";

            hm.put("WHERE", whereClause);

            JasperPrint amosarInforme = JasperFillManager.fillReport(informeJasper, hm, bd.Conexion.getConexion());
            JasperViewer.viewReport(amosarInforme);
        } catch (JRException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro listado");
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarActionPerformed
        filtrar();
    }//GEN-LAST:event_btnFiltrarActionPerformed

    private void txtResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResultadoActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        XestorDeXanelas.pecharIFrmImprimirFacturas();
    }//GEN-LAST:event_formInternalFrameClosed

    private void txtResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtResultadoMouseClicked
        // TODO add your handling code here:
        DlgDetalle dlgDetalle = new DlgDetalle(pai, true, sSQL);
        dlgDetalle.show();
        //JTextArea txtSQL=new JTextArea(sSQL);
        //JOptionPane.showMessageDialog(this, txtSQL);
    }//GEN-LAST:event_txtResultadoMouseClicked

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlData;
    private javax.swing.JPanel pnlFormulario;
    private javax.swing.JPanel pnlNumeroFactura;
    private javax.swing.JPanel pnlResultado;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDataFinal;
    private javax.swing.JTextField txtDataInicial;
    private javax.swing.JTextField txtNFacturaFinal;
    private javax.swing.JTextField txtNFacturaInicial;
    private javax.swing.JTextField txtResultado;
    // End of variables declaration//GEN-END:variables

    private void filtrar() {
        validar();

        Vector vecIdFacturas = new Vector();
        String strWhere = "1";
        if (!txtCliente.getText().equals("")) {
            strWhere = strWhere + " AND cliente LIKE '%" + txtCliente.getText() + "%'";
        }
        if (!txtNFacturaInicial.getText().equals("") && !txtNFacturaFinal.getText().equals("")) {
            strWhere = strWhere + " AND numfactura BETWEEN '" + txtNFacturaInicial.getText() + "' AND '" + txtNFacturaFinal.getText() + "'";
        }
        if (!txtDataInicial.getText().equals("") && !txtDataFinal.getText().equals("")) {
            strWhere = strWhere + " AND datafactura BETWEEN '" + Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(txtDataInicial.getText()) + "' AND '" + Datas.Data_Dia_BARRA_Mes_BARRA_AnhoAFormatoMySQLYYYY_GUION_MM_GUION_DD(txtDataFinal.getText()) + "'";
        }
        vecIdFacturas = ConsultasSQL.recuperarIdFacturas(strWhere);
        if (vecIdFacturas.isEmpty()) {
            txtResultado.setText("Non existen facturas con ese filtro");
        } else {
            if (vecIdFacturas.size() == 1) {
                txtResultado.setText(String.valueOf(vecIdFacturas.size()) + " factura seleccionada");
            } else {
                txtResultado.setText(String.valueOf(vecIdFacturas.size()) + " facturas seleccionadas");
            }
        }
        sSQL = strWhere;
    }

    private void validar() {
        //validamos datas  
        if (!txtDataInicial.getText().equals("")) {
            marcaErro(txtDataInicial, Datas.isData_Dia_BARRA_Mes_BARRA_Anho_Valida(txtDataInicial.getText()));
        }
        if (!txtDataFinal.getText().equals("")) {
            marcaErro(txtDataFinal, Datas.isData_Dia_BARRA_Mes_BARRA_Anho_Valida(txtDataFinal.getText()));
        }

    }

    private void marcaErro(javax.swing.JComponent comp, boolean fNonErro) {
        if (fNonErro) {
            comp.setBorder(BorderFactory.createEmptyBorder());
        } else {
            comp.setBorder(BorderFactory.createLineBorder(Color.red));
        }
    }

    private void cargarAyuda() throws MalformedURLException, HelpSetException {
        File archivo = new File("src/help/help_set.hs");
        URL hsURL = archivo.toURI().toURL();

        HelpSet helpset = new HelpSet(getClass().getClassLoader(), hsURL);
        HelpBroker hb = helpset.createHelpBroker();

        hb.enableHelpKey(this.getContentPane(), "general", helpset);

        hb.enableHelpKey(txtCliente, "detalles", helpset);
        hb.enableHelpKey(txtDataFinal, "detalles", helpset);
        hb.enableHelpKey(txtDataInicial, "detalles", helpset);
        hb.enableHelpKey(txtNFacturaFinal, "detalles", helpset);
        hb.enableHelpKey(txtNFacturaInicial, "detalles", helpset);
        hb.enableHelpKey(txtResultado, "detalles", helpset);
    }
}
