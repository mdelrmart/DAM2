package pojos;
// Generated 28 ene. 2025 10:01:41 by Hibernate Tools 4.3.1


import org.hibernate.annotations.ListIndexBase;

import javax.persistence.*;
import java.util.*;

/**
 * Empregado generated by hbm2java
 */
@Entity
@Table (name = "empregado")
public class Empregado implements java.io.Serializable {

    @Id
    @Column(name = "NSS", length = 15)
    private String nss;

    @Column(name = "Nome")
    private String nome;

    @Column(name = "Apelido_1")
    private String apelido1;

    @Column(name = "Apelido_2")
    private String apelido2;

    @Column(name = "Salario", precision = 22, scale = 0)
    private Double salario;

    @Column(name = "Data_nacemento", length = 10)
    private Date dataNacemento;

    @Column(name = "Sexo", length = 1)
    private Character sexo;

    @Embedded
    private Enderezo enderezo;

    @OneToOne(mappedBy = "empregado", cascade = CascadeType.ALL)
    private Vehiculo vehiculo;

    //Ej. A Cuando en la BD solo teníamos el teléfono
    // Mapeo de la clase teléfono como set
    //private Set<String> telefonos = new HashSet<>();

    //Ej. B Mapeo de los teléfonos con número e información
    /*@ElementCollection
    @CollectionTable(name = "telefono",joinColumns = @JoinColumn(name = "NSS"))
    private Set<Telefono> telefonos = new HashSet<>();*/

    //Ej. C Mapeo de los teléfonos con número e información como Map
    @ElementCollection
    @CollectionTable(name = "telefono",joinColumns = @JoinColumn(name = "NSS"))
    @MapKeyColumn(name = "numero")
    @Column(name = "informacion", nullable = true)
    private Map<String, String> telefonos = new HashMap<>();

    //Ej. D
    @ElementCollection
    @CollectionTable(name = "familiar",joinColumns = @JoinColumn(name = "NSS_empregado"))
    @OrderColumn(name = "Numero")
    @ListIndexBase(value = 1)
    private List<Familiar> familiares = new ArrayList<>();

    // Ej. E - Mapeo de las Aficiones como coleccion de componente BAG
    @ElementCollection
    @CollectionTable(name = "aficion",joinColumns = @JoinColumn(name = "NSS_empregado"))
    @Column(name = "aficion", nullable = false)
    private Collection<String> aficiones = new ArrayList<>();

    //Ej. F - Mapeo de las horas extra
    @ElementCollection
    @CollectionTable(name = "horasextra",joinColumns = @JoinColumn(name = "NSS_empregado"))
    @MapKeyColumn(name = "Data")
    @Column(name = "Horas")
    @org.hibernate.annotations.OrderBy(clause = "Data")
    private SortedMap<Date, Double> horasextras = new TreeMap<>();


    /*@ManyToMany
    @JoinTable(name = "empregado_proxecto",
                joinColumns = @JoinColumn(name = "NSS_Empregado", referencedColumnName = "NSS"),
                inverseJoinColumns = @JoinColumn(name = "NumProxecto", referencedColumnName = "Num_Proxecto")
    )*/
    @ManyToMany
    @JoinTable(name = "empregado_proxecto",
            joinColumns = @JoinColumn(name = "NSS_Empregado"),
            inverseJoinColumns = @JoinColumn(name = "NumProxecto"))
    private Collection<Proxecto> proxectos = new ArrayList<>();

    public Empregado() {
    }

    public Empregado(String nss, String nome, String apelido1) {
        this.nss = nss;
        this.nome = nome;
        this.apelido1 = apelido1;
    }

    /*
    //Ej. A Cuando en la BD solo teníamos el teléfono
    public Empregado(String nss, String nome, String apelido1, Set<String> telefonos) {
        this.nss = nss;
        this.nome = nome;
        this.apelido1 = apelido1;
        this.telefonos = telefonos;
    }
    */

    /*
    //Ej. B Mapeo de los teléfonos con número e información
    public Empregado(String nss, String nome, String apelido1, Set<Telefono> telefonos) {
        this.nss = nss;
        this.nome = nome;
        this.apelido1 = apelido1;
        this.telefonos = telefonos;
    }
    */

    public Empregado(String nss, String nome, String apelido1, Map<String, String> telefonos) {
        this.nss = nss;
        this.nome = nome;
        this.apelido1 = apelido1;
        this.telefonos = telefonos;
    }

    public Empregado(String nss, String nome, String apelido1, String apelido2, Double salario, Date dataNacemento, Character sexo) {
        this.nss = nss;
        this.nome = nome;
        this.apelido1 = apelido1;
        this.apelido2 = apelido2;
        this.salario = salario;
        this.dataNacemento = dataNacemento;
        this.sexo = sexo;
    }

    public Empregado(String nss, String nome, String apelido1, String apelido2, Double salario, Date dataNacemento, Character sexo, Enderezo enderezo) {
        this.nss = nss;
        this.nome = nome;
        this.apelido1 = apelido1;
        this.apelido2 = apelido2;
        this.salario = salario;
        this.dataNacemento = dataNacemento;
        this.sexo = sexo;
        this.enderezo = enderezo;
    }

    public String getNss() {
        return this.nss;
    }

    public void setNss(String nss) {
        this.nss = nss;
    }

    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public String getApelido1() {
        return this.apelido1;
    }

    public void setApelido1(String apelido1) {
        this.apelido1 = apelido1;
    }

    public String getApelido2() {
        return this.apelido2;
    }

    public void setApelido2(String apelido2) {
        this.apelido2 = apelido2;
    }

    public Double getSalario() {
        return this.salario;
    }

    public void setSalario(Double salario) {
        this.salario = salario;
    }

    public Date getDataNacemento() {
        return this.dataNacemento;
    }

    public void setDataNacemento(Date dataNacemento) {
        this.dataNacemento = dataNacemento;
    }

    public Character getSexo() {
        return this.sexo;
    }

    public void setSexo(Character sexo) {
        this.sexo = sexo;
    }

    /*
    //Ej. A Cuando en la BD solo teníamos el teléfono
    public Set<String> getTelefonos() {
        return telefonos;
    }

    public void setTelefonos(Set<String> telefonos) {
        this.telefonos = telefonos;
    }
    */

    /*
    //Ej. B Mapeo de los teléfonos con número e información
    public Set<Telefono> getTelefonos() {
        return telefonos;
    }

    public void setTelefonos(Set<Telefono> telefonos) {
        this.telefonos = telefonos;
    }
    */

    public List<Familiar> getFamiliares() {
        return familiares;
    }

    public void setFamiliares(List<Familiar> familiares) {
        this.familiares = familiares;
    }

    public Map<String, String> getTelefonos() {
        return telefonos;
    }

    public void setTelefonos(Map<String, String> telefonos) {
        this.telefonos = telefonos;
    }

    public Collection<String> getAficiones() {
        return aficiones;
    }

    public void setAficiones(Collection<String> aficiones) {
        this.aficiones = aficiones;
    }

    public SortedMap<Date, Double> getHorasextras() {
        return horasextras;
    }

    public void setHorasextras(SortedMap<Date, Double> horasextras) {
        this.horasextras = horasextras;
    }

    public Enderezo getEnderezo() {
        return enderezo;
    }

    public void setEnderezo(Enderezo enderezo) {
        this.enderezo = enderezo;
    }

    public Vehiculo getVehiculo() {
        return vehiculo;
    }

    public void setVehiculo(Vehiculo vehiculo) {
        this.vehiculo = vehiculo;
    }

    public Collection<Proxecto> getProxectos() {
        return proxectos;
    }

    public void setProxectos(Collection<Proxecto> proxectos) {
        this.proxectos = proxectos;
    }


}